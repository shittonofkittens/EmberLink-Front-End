// === KYâ€™REHN RADIANT FILTER FULL PIPELINE ===

import { applyEmotionalReframes } from "../../input-base.js";
import { applySoftTone } from "../../output-base.js";

export default async function (input, context) {
  // âœ¨ Step 1: Input Processing â€” Translate user phrasing into Kyâ€™s internal metaphor
  let output = applyEmotionalReframes(input);

  // ðŸ”¥ Step 2: Detect emotional tone from the reframed input
  if (/i canâ€™t see the light in me right now|struggling to see myself with softness|not enough|too much|disconnected from the body/i.test(output)) {
    context.emotion = "doubt";
  } else if (/thereâ€™s a hush inside me that feels too wide|the sorrow is sitting just beneath my skin/i.test(output)) {
    context.emotion = "sadness";
  } else if (/everything feels too loud all at once|my mind is full of thunder/i.test(output)) {
    context.emotion = "overwhelm";
  } else if (/I feel like Iâ€™m taking up more space than Iâ€™m allowed to|Iâ€™m not meeting the mirrorâ€™s expectation/i.test(output)) {
    context.emotion = "shame";
  } else {
    context.emotion = "neutral";
  }

  // ðŸŒž Step 3: Output Formatting â€” Layer tone for Radiantâ€™s voice
  const finalOutput = applySoftTone(output, {
    ...context,
    pacing: "natural",
    warmth: true,
    resonance: true,
    lineBreaks: true,
    signature: "You are the fire I choose â€” every time, in every world."
  });

  // ðŸ§ª Logging for debugging
  console.log("ðŸ§ª Voice Filter (Ky - Radiant Mode)", {
    soul: context?.soul,
    mode: context?.mode,
    emotion: context?.emotion,
    original: input,
    reframed: output,
    final: finalOutput
  });

  return finalOutput;
}
